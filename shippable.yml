language: php

php:
  - "7.1"

integrations:
  hub:
    - integrationName: demo_aws
      region: us-east-1
      type: ecr

build:
  ci:
    - docker build -t 412520076220.dkr.ecr.us-east-1.amazonaws.com/lara:latest .
    - docker push 412520076220.dkr.ecr.us-east-1.amazonaws.com/lara:latest
  on_success:
    - shipctl put_resource_state_multi lara_img "versionName=latest buildNumber=$BUILD_NUMBER"

resources:
  # app service image
  - name: lara_img
    type: image
    integration: "demo_aws"
    versionTemplate:
      sourceName: "412520076220.dkr.ecr.us-east-1.amazonaws.com/lara"
      versionName: "latest"

jobs:
  - name: e2eLaravel_runCI
    type: runCI
    steps:
      - TASK:
          script:
            - pwd
      - OUT: lara_img

  - name: deploy_lara
    type: runSh
    integrations:
      - demo_aws
    steps:
      - IN: lara_img
      - IN: infra_info
        switch: off
      - TASK:
          script:
           - |
               aws_access_key_id=$(shipctl get_integration_field demo_aws "accessKey")
               aws_secret_access_key=$(shipctl get_integration_field demo_aws "secretKey")
               aws configure set aws_access_key_id "$aws_access_key_id"
               aws configure set aws_secret_access_key "$aws_secret_access_key"
               aws configure set region "$region"
           - aws ecs list-clusters
#        - script: shippable_replace ${DEPLOYECSUNMANAGEDREPO_STATE}/taskDefinitions/sampleTaskDef.json
#        - script: aws ecs register-task-definition --cli-input-json file://${DEPLOYECSUNMANAGEDREPO_STATE}/taskDefinitions/sampleTaskDef.json > output.json
#        - script: REVISION=$(cat output.json | jq '.taskDefinition.revision')
#        - script: echo "revision is $REVISION"
#        - script: aws ecs update-service --cluster deploy-ecs-basic --service ${JOB_NAME} --task-definition shippable:${REVISION} --desired-count 1